// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id        BigInt    @id @default(autoincrement())
  hashId    String    @default(cuid())
  name      String?
  email     String?   @unique
  password  String?
  role      Role      @default(USER)
  shippingAddress BigInt?
  defaultAddress BigInt?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Address   Address[]
  CartItem  CartItem[]

  @@map("users")
}

//Create Address table
model Address {
  id        BigInt   @id @default(autoincrement())
  userId    BigInt
  lineOne   String
  lineTwo   String?
  city      String
  state     String
  country   String
  pinCode   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // relation to User
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("addresses")
}

// create product table
model Product {
  id          BigInt   @id @default(autoincrement())
  name        String
  description String   @db.Text
  price       Float
  tags        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  CartItem   CartItem[]

  @@map("products")
}

// creating cart item table
model CartItem {
  id        BigInt   @id @default(autoincrement())
  userId    BigInt
  productId BigInt
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // relation to User
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  // relation to Product
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@map("cart_items")
}
